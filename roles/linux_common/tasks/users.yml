---
- name: Set users variable when there are NOT any additional users.
  ansible.builtin.set_fact:
    flattend_users: "{{ users }}"
  when: additional_users is not defined

- name: Set users variable when there ARE additional users.
  ansible.builtin.set_fact:
    flattend_users: "{{ users + additional_users }}"
  when: additional_users is defined

- name: Configure users.
  ansible.builtin.user:
    name: '{{ item.username }}'
    groups: '{{ item.groups | join(",") | default(omit) }}'
    shell: '{{ item.shell | default(omit) }}'
    password: '{{ item.password | default(omit) }}'
    comment: '{{ item.name | default(omit) }}'
    uid: '{{ item.uid | default(omit) }}'
    password_expire_min: '{{ item.password_expire_min | default(0) }}' # Default password to be changed on next login
    password_expire_max: '{{ item.password_expire_max | default(0) }}' # Default password to be changed on next login
    home: '{{ item.homedir | default(omit) }}'
    state: '{{ item.state | default("present") }}'
    update_password: '{{ item.update_password | default("on_create") }}'
  with_items: "{{ flattend_users }}"
  register: created_users

- name: Configure authorized keys.
  ansible.posix.authorized_key:
    user: '{{item.0.username}}'
    key: '{{item.1.public_key}}'
    state: '{{item.1.state | default ("present")}}'
  with_subelements:
    - "{{ flattend_users }}"
    - authorized_keys
    - skip_missing: true
  when: item.0.state | default("present") != 'absent'